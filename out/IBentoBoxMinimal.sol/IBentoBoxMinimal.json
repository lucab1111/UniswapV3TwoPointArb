{"abi":[{"type":"function","name":"balanceOf","inputs":[{"name":"","type":"address","internalType":"address"},{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"deposit","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"share","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amountOut","type":"uint256","internalType":"uint256"},{"name":"shareOut","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"harvest","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"balance","type":"bool","internalType":"bool"},{"name":"maxChangeAmount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"registerProtocol","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMasterContractApproval","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"masterContract","type":"address","internalType":"address"},{"name":"approved","type":"bool","internalType":"bool"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"strategyData","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"total","type":"tuple","internalType":"struct StrategyData","components":[{"name":"strategyStartDate","type":"uint64","internalType":"uint64"},{"name":"targetPercentage","type":"uint64","internalType":"uint64"},{"name":"balance","type":"uint128","internalType":"uint128"}]}],"stateMutability":"view"},{"type":"function","name":"toAmount","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"share","type":"uint256","internalType":"uint256"},{"name":"roundUp","type":"bool","internalType":"bool"}],"outputs":[{"name":"amount","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"toShare","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"roundUp","type":"bool","internalType":"bool"}],"outputs":[{"name":"share","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"totals","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"total","type":"tuple","internalType":"struct Rebase","components":[{"name":"elastic","type":"uint128","internalType":"uint128"},{"name":"base","type":"uint128","internalType":"uint128"}]}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"share","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdraw","inputs":[{"name":"token_","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"share","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amountOut","type":"uint256","internalType":"uint256"},{"name":"shareOut","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"balanceOf(address,address)":"f7888aec","deposit(address,address,address,uint256,uint256)":"02b9446c","harvest(address,bool,uint256)":"66c6bb0b","registerProtocol()":"aee4d1b2","setMasterContractApproval(address,address,bool,uint8,bytes32,bytes32)":"c0a47c93","strategyData(address)":"df23b45b","toAmount(address,uint256,bool)":"56623118","toShare(address,uint256,bool)":"da5139ca","totals(address)":"4ffe34db","transfer(address,address,address,uint256)":"f18d03cc","withdraw(address,address,address,uint256,uint256)":"97da6d30"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"balance\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"maxChangeAmount\",\"type\":\"uint256\"}],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"masterContract\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"setMasterContractApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"strategyData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"strategyStartDate\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"targetPercentage\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"balance\",\"type\":\"uint128\"}],\"internalType\":\"struct StrategyData\",\"name\":\"total\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"roundUp\",\"type\":\"bool\"}],\"name\":\"toAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"roundUp\",\"type\":\"bool\"}],\"name\":\"toShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"totals\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"elastic\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"base\",\"type\":\"uint128\"}],\"internalType\":\"struct Rebase\",\"name\":\"total\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"`token` is aliased as `address` from `IERC20` for simplicity.\",\"kind\":\"dev\",\"methods\":{\"deposit(address,address,address,uint256,uint256)\":{\"params\":{\"amount\":\"Token amount in native representation to deposit.\",\"from\":\"which account to pull the tokens.\",\"share\":\"Token amount represented in shares to deposit. Takes precedence over `amount`.\",\"to\":\"which account to push the tokens.\",\"token\":\"The ERC-20 token to deposit.\"},\"returns\":{\"amountOut\":\"The amount deposited.\",\"shareOut\":\"The deposited amount represented in shares.\"}},\"setMasterContractApproval(address,address,bool,uint8,bytes32,bytes32)\":{\"details\":\"Approves users' BentoBox assets to a \\\"master\\\" contract.\"},\"toAmount(address,uint256,bool)\":{\"details\":\"Helper function to represent shares back into the `token` amount.\",\"params\":{\"roundUp\":\"If the result should be rounded up.\",\"share\":\"The amount of shares.\",\"token\":\"The ERC-20 token.\"},\"returns\":{\"amount\":\"The share amount back into native representation.\"}},\"toShare(address,uint256,bool)\":{\"details\":\"Helper function to represent an `amount` of `token` in shares.\",\"params\":{\"amount\":\"The `token` amount.\",\"roundUp\":\"If the result `share` should be rounded up.\",\"token\":\"The ERC-20 token.\"},\"returns\":{\"share\":\"The token amount represented in shares.\"}},\"totals(address)\":{\"details\":\"Reads the Rebase `totals`from storage for a given token\"},\"transfer(address,address,address,uint256)\":{\"params\":{\"from\":\"which user to pull the tokens.\",\"share\":\"The amount of `token` in shares.\",\"to\":\"which user to push the tokens.\",\"token\":\"The ERC-20 token to transfer.\"}},\"withdraw(address,address,address,uint256,uint256)\":{\"params\":{\"amount\":\"of tokens. Either one of `amount` or `share` needs to be supplied.\",\"from\":\"which user to pull the tokens.\",\"share\":\"Like above, but `share` takes precedence over `amount`.\",\"to\":\"which user to push the tokens.\",\"token_\":\"The ERC-20 token to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address,address)\":{\"notice\":\"Balance per ERC-20 token per account in shares.\"},\"deposit(address,address,address,uint256,uint256)\":{\"notice\":\"Deposit an amount of `token` represented in either `amount` or `share`.\"},\"registerProtocol()\":{\"notice\":\"Registers this contract so that users can approve it for BentoBox.\"},\"transfer(address,address,address,uint256)\":{\"notice\":\"Transfer shares from a user account to another one.\"},\"withdraw(address,address,address,uint256,uint256)\":{\"notice\":\"Withdraws an amount of `token` from a user account.\"}},\"notice\":\"Minimal BentoBox vault interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IBentoBoxMinimal.sol\":\"IBentoBoxMinimal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"src/interfaces/IBentoBoxMinimal.sol\":{\"keccak256\":\"0xba8b4cb90eabb2df60ab64a56473898401bb9a5e17f3a27f99d3f09957b8e9a0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a3768bc56412297bb6a5c3520c711cae81b40cf6fda9ad1c69799209d7aeefd8\",\"dweb:/ipfs/QmXjz6Na3k7MVCNbStHqY8LjRA8peH9QDuPPP8Y4JYuA7n\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"share","type":"uint256"}],"stateMutability":"payable","type":"function","name":"deposit","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"shareOut","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"bool","name":"balance","type":"bool"},{"internalType":"uint256","name":"maxChangeAmount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"harvest"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"registerProtocol"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"address","name":"masterContract","type":"address"},{"internalType":"bool","name":"approved","type":"bool"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setMasterContractApproval"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"strategyData","outputs":[{"internalType":"struct StrategyData","name":"total","type":"tuple","components":[{"internalType":"uint64","name":"strategyStartDate","type":"uint64"},{"internalType":"uint64","name":"targetPercentage","type":"uint64"},{"internalType":"uint128","name":"balance","type":"uint128"}]}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"share","type":"uint256"},{"internalType":"bool","name":"roundUp","type":"bool"}],"stateMutability":"view","type":"function","name":"toAmount","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"roundUp","type":"bool"}],"stateMutability":"view","type":"function","name":"toShare","outputs":[{"internalType":"uint256","name":"share","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"totals","outputs":[{"internalType":"struct Rebase","name":"total","type":"tuple","components":[{"internalType":"uint128","name":"elastic","type":"uint128"},{"internalType":"uint128","name":"base","type":"uint128"}]}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"share","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transfer"},{"inputs":[{"internalType":"address","name":"token_","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"share","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdraw","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"shareOut","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"deposit(address,address,address,uint256,uint256)":{"params":{"amount":"Token amount in native representation to deposit.","from":"which account to pull the tokens.","share":"Token amount represented in shares to deposit. Takes precedence over `amount`.","to":"which account to push the tokens.","token":"The ERC-20 token to deposit."},"returns":{"amountOut":"The amount deposited.","shareOut":"The deposited amount represented in shares."}},"setMasterContractApproval(address,address,bool,uint8,bytes32,bytes32)":{"details":"Approves users' BentoBox assets to a \"master\" contract."},"toAmount(address,uint256,bool)":{"details":"Helper function to represent shares back into the `token` amount.","params":{"roundUp":"If the result should be rounded up.","share":"The amount of shares.","token":"The ERC-20 token."},"returns":{"amount":"The share amount back into native representation."}},"toShare(address,uint256,bool)":{"details":"Helper function to represent an `amount` of `token` in shares.","params":{"amount":"The `token` amount.","roundUp":"If the result `share` should be rounded up.","token":"The ERC-20 token."},"returns":{"share":"The token amount represented in shares."}},"totals(address)":{"details":"Reads the Rebase `totals`from storage for a given token"},"transfer(address,address,address,uint256)":{"params":{"from":"which user to pull the tokens.","share":"The amount of `token` in shares.","to":"which user to push the tokens.","token":"The ERC-20 token to transfer."}},"withdraw(address,address,address,uint256,uint256)":{"params":{"amount":"of tokens. Either one of `amount` or `share` needs to be supplied.","from":"which user to pull the tokens.","share":"Like above, but `share` takes precedence over `amount`.","to":"which user to push the tokens.","token_":"The ERC-20 token to withdraw."}}},"version":1},"userdoc":{"kind":"user","methods":{"balanceOf(address,address)":{"notice":"Balance per ERC-20 token per account in shares."},"deposit(address,address,address,uint256,uint256)":{"notice":"Deposit an amount of `token` represented in either `amount` or `share`."},"registerProtocol()":{"notice":"Registers this contract so that users can approve it for BentoBox."},"transfer(address,address,address,uint256)":{"notice":"Transfer shares from a user account to another one."},"withdraw(address,address,address,uint256,uint256)":{"notice":"Withdraws an amount of `token` from a user account."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IBentoBoxMinimal.sol":"IBentoBoxMinimal"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"src/interfaces/IBentoBoxMinimal.sol":{"keccak256":"0xba8b4cb90eabb2df60ab64a56473898401bb9a5e17f3a27f99d3f09957b8e9a0","urls":["bzz-raw://a3768bc56412297bb6a5c3520c711cae81b40cf6fda9ad1c69799209d7aeefd8","dweb:/ipfs/QmXjz6Na3k7MVCNbStHqY8LjRA8peH9QDuPPP8Y4JYuA7n"],"license":"UNLICENSED"}},"version":1},"id":8}